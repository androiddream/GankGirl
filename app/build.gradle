apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
//apply plugin: 'realm-android'

//def gitVersionCode() {
//    def cmd = 'git rev-list HEAD --first-parent --count'
//    cmd.execute().text.trim().toInteger()
//}

//def gitVersionTag() {
//    def cmd = 'git describe --tags'
//    def version = cmd.execute().text.trim()
//    def pattern = "-(\\d+)-g"
//    def matcher = version =~ pattern
//    if (matcher) {
//        version = version.substring(0, matcher.start()) + "." + matcher[0][1]
//    } else {
//        version = version + ".0"
//    }
//    return version
//}

android {
    def app = rootProject.ext.android
    compileSdkVersion app.compileSdkVersion as int
    buildToolsVersion app.buildToolsVersion

    defaultConfig {
        applicationId app.applicationId
        minSdkVersion app.minSdkVersion as int
        targetSdkVersion app.targetSdkVersion as int
        versionCode app.versionCode as int
        versionName app.versionName
//        jackOptions {
//            enabled true
//        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。
    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug { // 为了不和 release 版本冲突
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

//    applicationVariants.all { variant ->
//        if (variant.buildType.name.equals('release')) {
//            variant.mergedFlavor.versionCode = gitVersionCode()
//            variant.mergedFlavor.versionName = gitVersionTag()
//        }
//    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile rootProject.ext.dependencies["SupportAppcompatV4"]
    compile rootProject.ext.dependencies["SupportAppcompatV7"]
    compile rootProject.ext.dependencies["SupportRecyclerViewV7"]
    compile rootProject.ext.dependencies["SupportDesign"]
    compile rootProject.ext.dependencies["SupportCardview"]
    compile rootProject.ext.dependencies["Butterknife"]
    annotationProcessor rootProject.ext.dependencies["ButterknifeCompiler"]
    compile rootProject.ext.dependencies["Glide"]
    compile rootProject.ext.dependencies["GlideOkHttp"]
    compile rootProject.ext.dependencies["Retrofit"]
    compile rootProject.ext.dependencies["RetrofitConverterGson"]
    //compile rootProject.ext.dependencies["RetrofitAdapterRxJava"]
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    compile rootProject.ext.dependencies["OkHttpLoggingInterceptor"]
//    compile rootProject.ext.dependencies["RxJava"]
//    compile rootProject.ext.dependencies["RxAndroid"]
    //RxJava的依赖包（我使用的最新版本）
    compile 'io.reactivex.rxjava2:rxjava:2.0.1'
    //RxAndroid的依赖包
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
//    compile rootProject.ext.dependencies["RxBinding"]
//    compile rootProject.ext.dependencies["RxBindingSupportV4"]
//    compile rootProject.ext.dependencies["RxBindingSupportV7"]
//    compile rootProject.ext.dependencies["RxLifecycle"]
//    compile rootProject.ext.dependencies["RxLifecycleComponents"]
    compile 'com.trello.rxlifecycle2:rxlifecycle:2.0.1'

// If you want to bind to Android-specific lifecycles
    compile 'com.trello.rxlifecycle2:rxlifecycle-android:2.0.1'

// If you want pre-written Activities and Fragments you can subclass as providers
    compile 'com.trello.rxlifecycle2:rxlifecycle-components:2.0.1'
    compile rootProject.ext.dependencies["Umeng"]
    testCompile 'junit:junit:4.12'
}
